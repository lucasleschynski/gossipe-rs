2024-09-09 19:20:59,484{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w echo --bin ../maelstrom/demo/ruby/echo.rb --time-limit 5
2024-09-09 19:20:59,509{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x7e86ff3b"
         "maelstrom.db$db$reify__16142@7e86ff3b"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "echo"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x1f6865ca" "2024-09-09T19:20:59.467+01:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x6044311a"
         "maelstrom.net$jepsen_net$reify__15251@6044311a"]
 :client
 #object[maelstrom.workload.echo$client$reify__16863
         "0x7416b560"
         "maelstrom.workload.echo$client$reify__16863@7416b560"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x53d782b0"
         "java.util.concurrent.CyclicBarrier@53d782b0"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0xf4deb35"
         "jepsen.checker$compose$reify__11881@f4deb35"]
 :argv
 ("test"
  "-w"
  "echo"
  "--bin"
  "../maelstrom/demo/ruby/echo.rb"
  "--time-limit"
  "5")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@4ec0c727"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@fbcc62a"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "../maelstrom/demo/ruby/echo.rb"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 5000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x58230224"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@58230224"],
                   :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x583f6270"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@583f6270"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.EachThread
                                {:fresh-gen #object[maelstrom.workload.echo$workload$fn__16882
                                                    "0x2bd24c09"
                                                    "maelstrom.workload.echo$workload$fn__16882@2bd24c09"],
                                 :context-filters #object[clojure.core$promise$reify__8591
                                                          "0x3e6b8b27"
                                                          {:status :pending,
                                                           :val nil}],
                                 :gens {}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x7e199cec"
         "maelstrom.net$jepsen_os$reify__15254@7e199cec"]
 :time-limit 5
 :workload :echo
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-09-09 19:21:00,406{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2024-09-09 19:21:00,407{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-09-09 19:21:00,409{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-09-09 19:21:00,410{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2024-09-09 19:21:00,410{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2024-09-09 19:21:00,410{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2024-09-09 19:21:00,410{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2024-09-09 19:21:00,410{GMT}	INFO	[jepsen node n4] maelstrom.process: launching ../maelstrom/demo/ruby/echo.rb []
2024-09-09 19:21:00,410{GMT}	INFO	[jepsen node n5] maelstrom.process: launching ../maelstrom/demo/ruby/echo.rb []
2024-09-09 19:21:00,410{GMT}	INFO	[jepsen node n2] maelstrom.process: launching ../maelstrom/demo/ruby/echo.rb []
2024-09-09 19:21:00,410{GMT}	INFO	[jepsen node n3] maelstrom.process: launching ../maelstrom/demo/ruby/echo.rb []
2024-09-09 19:21:00,410{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-09-09 19:21:00,412{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2024-09-09 19:21:00,412{GMT}	INFO	[jepsen node n1] maelstrom.process: launching ../maelstrom/demo/ruby/echo.rb []
2024-09-09 19:21:00,497{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-09-09 19:21:00,506{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 63"
2024-09-09 19:21:00,509{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 63", :msg_id 2, :in_reply_to 1}
2024-09-09 19:21:00,772{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 106"
2024-09-09 19:21:00,773{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 69"
2024-09-09 19:21:00,776{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 106", :msg_id 2, :in_reply_to 1}
2024-09-09 19:21:00,776{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 69", :msg_id 2, :in_reply_to 1}
2024-09-09 19:21:00,909{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 3"
2024-09-09 19:21:00,912{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 3", :msg_id 2, :in_reply_to 1}
2024-09-09 19:21:00,949{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 56"
2024-09-09 19:21:00,950{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 56", :msg_id 3, :in_reply_to 2}
2024-09-09 19:21:01,264{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 79"
2024-09-09 19:21:01,269{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 79", :msg_id 3, :in_reply_to 2}
2024-09-09 19:21:01,553{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 27"
2024-09-09 19:21:01,557{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 27", :msg_id 3, :in_reply_to 2}
2024-09-09 19:21:01,726{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 11"
2024-09-09 19:21:01,730{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 11", :msg_id 4, :in_reply_to 3}
2024-09-09 19:21:01,860{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 71"
2024-09-09 19:21:01,864{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 71", :msg_id 3, :in_reply_to 2}
2024-09-09 19:21:02,118{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 49"
2024-09-09 19:21:02,121{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 49", :msg_id 4, :in_reply_to 3}
2024-09-09 19:21:02,171{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 7"
2024-09-09 19:21:02,172{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 7", :msg_id 5, :in_reply_to 4}
2024-09-09 19:21:02,190{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 51"
2024-09-09 19:21:02,191{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 51", :msg_id 4, :in_reply_to 3}
2024-09-09 19:21:02,207{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 119"
2024-09-09 19:21:02,208{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 119", :msg_id 6, :in_reply_to 5}
2024-09-09 19:21:02,559{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 3"
2024-09-09 19:21:02,563{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 3", :msg_id 2, :in_reply_to 1}
2024-09-09 19:21:02,825{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 40"
2024-09-09 19:21:02,829{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 40", :msg_id 4, :in_reply_to 3}
2024-09-09 19:21:03,225{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 1"
2024-09-09 19:21:03,227{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 1", :msg_id 5, :in_reply_to 4}
2024-09-09 19:21:03,518{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 84"
2024-09-09 19:21:03,520{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 84", :msg_id 7, :in_reply_to 6}
2024-09-09 19:21:03,603{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 3"
2024-09-09 19:21:03,604{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 3", :msg_id 5, :in_reply_to 4}
2024-09-09 19:21:03,695{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 3"
2024-09-09 19:21:03,696{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 3", :msg_id 6, :in_reply_to 5}
2024-09-09 19:21:04,006{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 92"
2024-09-09 19:21:04,008{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 92", :msg_id 5, :in_reply_to 4}
2024-09-09 19:21:04,016{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 73"
2024-09-09 19:21:04,017{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 73", :msg_id 6, :in_reply_to 5}
2024-09-09 19:21:04,290{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 107"
2024-09-09 19:21:04,294{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 107", :msg_id 6, :in_reply_to 5}
2024-09-09 19:21:04,510{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 79"
2024-09-09 19:21:04,512{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 79", :msg_id 8, :in_reply_to 7}
2024-09-09 19:21:04,703{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 72"
2024-09-09 19:21:04,706{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 72", :msg_id 9, :in_reply_to 8}
2024-09-09 19:21:04,934{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 33"
2024-09-09 19:21:04,937{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 33", :msg_id 7, :in_reply_to 6}
2024-09-09 19:21:05,283{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 25"
2024-09-09 19:21:05,286{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 25", :msg_id 8, :in_reply_to 7}
2024-09-09 19:21:05,320{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2024-09-09 19:21:05,370{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2024-09-09 19:21:05,370{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2024-09-09 19:21:05,370{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2024-09-09 19:21:05,370{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2024-09-09 19:21:05,370{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2024-09-09 19:21:06,446{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2024-09-09 19:21:06,453{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2024-09-09 19:21:06,684{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2024-09-09 19:21:06,691{GMT}	INFO	[jepsen results] jepsen.store: Wrote /Users/lucas/fun/flyio-dist-sys/gossipe-rs/store/echo/20240909T192059.467+0100/results.edn
2024-09-09 19:21:06,730{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 26,
         :ok-count 26,
         :fail-count 0,
         :info-count 0,
         :by-f {:echo {:valid? true,
                       :count 26,
                       :ok-count 26,
                       :fail-count 0,
                       :info-count 0}}},
 :availability {:valid? true, :ok-fraction 1.0},
 :net {:all {:send-count 62,
             :recv-count 62,
             :msg-count 62,
             :msgs-per-op 2.3846154},
       :clients {:send-count 62, :recv-count 62, :msg-count 62},
       :servers {:send-count 0,
                 :recv-count 0,
                 :msg-count 0,
                 :msgs-per-op 0.0},
       :valid? true},
 :workload {:valid? true, :errors ()},
 :valid? true}


Everything looks good! ヽ(‘ー`)ノ
